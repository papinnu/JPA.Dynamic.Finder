plugins {
    id 'java'
    id 'io.freefair.lombok' version '6.5.0.3'
    id 'org.springframework.boot' version '3.3.2' apply false
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.adarshr.test-logger' version '3.2.0'
    id 'maven-publish'
}

//def springVersion = "3.3.2"
group = 'pu.jpa'
version = '1.0.2'
java {
    sourceCompatibility = '17'
}
java.targetCompatibility = JavaVersion.VERSION_17
java.sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
	mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'javax.validation:validation-api:2.0.1.Final'

    def jacksonVersion = "2.15.3"
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-json-org:$jacksonVersion"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    def springVersion = "3.3.2"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-web:$springVersion"

    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.register('runTest') {
    bootRun.systemProperty('spring.profiles.active', 'test')
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}
test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'pu.jpa'
            artifactId = 'jpa-dynamic-finder'
            version = version.toString()
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/papinnu/JPA.Dynamic.Finder")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

